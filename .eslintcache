[{"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\index.js":"1","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\App.js":"2","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\reportWebVitals.js":"3","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\index.js":"4","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Login\\Login.js":"5","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Project\\Project.js":"6","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Emloyee\\Employee.js":"7","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\reducer.js":"8","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\project\\Reducer.js":"9","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\employees\\Reducer.js":"10","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\employees\\Action.js":"11","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\actions.js":"12","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\project\\Action.js":"13","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\project\\Types.js":"14","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\types.js":"15","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\employees\\Types.js":"16","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\untils\\api.js":"17","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\DashBoard\\Dashboard.js":"18","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\Actions.js":"19","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\Types.js":"20","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\Reducer.js":"21","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Report\\Report.js":"22","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\ots\\Reducer.js":"23","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\ots\\Types.js":"24","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\ots\\Action.js":"25"},{"size":1136,"mtime":1608707059843,"results":"26","hashOfConfig":"27"},{"size":906,"mtime":1609128150073,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1608708494802,"results":"29","hashOfConfig":"27"},{"size":392,"mtime":1609140586800,"results":"30","hashOfConfig":"27"},{"size":6140,"mtime":1608912567912,"results":"31","hashOfConfig":"27"},{"size":19941,"mtime":1609148665970,"results":"32","hashOfConfig":"27"},{"size":24540,"mtime":1609156986393,"results":"33","hashOfConfig":"27"},{"size":454,"mtime":1608909514147,"results":"34","hashOfConfig":"27"},{"size":855,"mtime":1609091439600,"results":"35","hashOfConfig":"27"},{"size":850,"mtime":1608911835394,"results":"36","hashOfConfig":"27"},{"size":673,"mtime":1608911840704,"results":"37","hashOfConfig":"27"},{"size":650,"mtime":1608909513252,"results":"38","hashOfConfig":"27"},{"size":607,"mtime":1609084523871,"results":"39","hashOfConfig":"27"},{"size":246,"mtime":1608855785141,"results":"40","hashOfConfig":"27"},{"size":66,"mtime":1608909499815,"results":"41","hashOfConfig":"27"},{"size":220,"mtime":1608911801868,"results":"42","hashOfConfig":"27"},{"size":361,"mtime":1608708466740,"results":"43","hashOfConfig":"27"},{"size":5214,"mtime":1609143302149,"results":"44","hashOfConfig":"27"},{"size":650,"mtime":1608909513252,"results":"45","hashOfConfig":"27"},{"size":66,"mtime":1608909499815,"results":"46","hashOfConfig":"27"},{"size":454,"mtime":1608909514147,"results":"47","hashOfConfig":"27"},{"size":8884,"mtime":1609160605615,"results":"48","hashOfConfig":"27"},{"size":321,"mtime":1609141624366,"results":"49","hashOfConfig":"27"},{"size":84,"mtime":1609140607214,"results":"50","hashOfConfig":"27"},{"size":192,"mtime":1609140502650,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jiyvge",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\index.js",[],["105","106","107","108","109","110"],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\App.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\reportWebVitals.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\index.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Login\\Login.js",["111"],"/* eslint-disable no-unused-vars */\n/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/order */\nimport React, { useState } from 'react';\nimport { Button, Form, Modal } from 'react-bootstrap';\nimport ProTypes from 'prop-types';\nimport testAPI from '../../untils/api';\nimport './index.css';\n// eslint-disable-next-line import/no-unresolved\nimport { connect } from 'react-redux';\nimport { Formik } from 'formik';\n// eslint-disable-next-line import/no-unresolved\nimport * as EmailValidator from 'email-validator';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport { actionLogin } from '../../store/login/Actions';\n\nconst qs = require('querystring');\n// import { Form } from 'react-bootstrap';\n\n/* eslint-disable react/react-in-jsx-scope */\n\nconst Login = (propsLogin) => {\n  const history = useHistory();\n  // eslint-disable-next-line no-unused-vars\n  const [notiState, setNotiState] = useState('');\n  const [modalState, setModalState] = useState(false);\n  const dataLocal = {\n    email: localStorage.getItem('email'),\n    password: localStorage.getItem('password'),\n  };\n  if (localStorage.getItem('email') !== ''\n    && localStorage.getItem('password') !== '') {\n    testAPI.post('/login/', qs.stringify(dataLocal)).then((data) => {\n      if (data.data.message !== 'Cannot find user in db' || data.data !== 'Password wrong.') {\n        propsLogin.actionLogin(data.data);\n        history.push('/dashboard');\n      }\n    }).catch((err) => {\n      console.log('err', err);\n    });\n    // console.log('123');\n  }\n  // eslint-disable-next-line no-unused-vars\n  return (\n    <Formik\n      initialValues={{ email: '', password: '' }}\n      onSubmit={async (values, { setSubmitting }) => {\n        setSubmitting(false);\n        testAPI.post('/login/', qs.stringify(values)).then((data) => {\n          if (data.data.message === 'Cannot find user in db') {\n            setNotiState('Dang nhap that bai.');\n            setModalState(true);\n          } else if (data.data === 'Password wrong.') {\n            setNotiState('Sai mật khẩu.');\n            setModalState(true);\n          } else {\n            propsLogin.actionLogin(data.data);\n            localStorage.setItem('email', values.email);\n            localStorage.setItem('password', values.password);\n            history.push('/dashboard');\n          }\n        }).catch((err) => {\n          setNotiState(err.message);\n          setModalState(true);\n        });\n      }}\n      validate={(values) => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Email must required.';\n        } else if (!EmailValidator.validate(values.email)) {\n          errors.email = 'Invalid email.';\n        }\n        if (!values.password) {\n          errors.password = 'Required';\n        } else if (values.password.length < 8) {\n          errors.password = 'Password must be 8 characters long.';\n        }\n        return errors;\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email().required('Required'),\n        password: Yup.string()\n          .required('No password provided.')\n          .min(8, 'Password is too short - should be 8 chars minimum.'),\n      })}\n    >\n      {(prop) => {\n        const {\n          values,\n          touched,\n          errors,\n          // isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = prop;\n        return (\n          <>\n            <div className=\"test-login\">\n              <div className=\"signup\">\n                <h1 className=\"signup-heading\">Sign up</h1>\n                <Form className=\"signup-form\" noValidate onSubmit={handleSubmit}>\n                  <Form.Group controlId=\"usernameInput\">\n                    <Form.Label className=\"signup-label\">\n                      Email\n                    </Form.Label>\n                    <Form.Control onBlur={handleBlur} value={values.email} className={errors.email && touched.email && 'error'} type=\"text\" placeholder=\"Enter the user name\" name=\"email\" onChange={handleChange} />\n                    {errors.email && touched.email && (\n                      <div className=\"input-feedback\">{errors.email}</div>\n                    )}\n\n                  </Form.Group>\n                  <Form.Group controlId=\"passwordInput\">\n                    <Form.Label className=\"signup-label\">Password</Form.Label>\n                    <Form.Control type=\"password\" onBlur={handleBlur} value={values.password} placeholder=\"Enter your password\" className={errors.password && touched.password && 'error'} name=\"password\" onChange={handleChange} />\n                    {errors.password && touched.password && (\n                      <div className=\"input-feedback\">{errors.password}</div>\n                    )}\n                  </Form.Group>\n                  <Button className=\"signup-submit\" type=\"submit\">Đăng nhập</Button>\n                </Form>\n              </div>\n\n            </div>\n            <Modal\n              show={modalState}\n              onHide={() => {\n                setModalState(false);\n              }}\n              size=\"sm\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Thông báo từ Admin</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>{notiState}</Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => {\n                    setModalState(false);\n                  }}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </>\n        );\n      }}\n    </Formik>\n  );\n};\n\nLogin.propTypes = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  // eslint-disable-next-line react/no-unused-prop-types\n  actionLogin: ProTypes.func.isRequired,\n};\nconst mapStatetoProps = (state) => ({\n  employees: state.employees,\n  // loginReducer: state.loginReducer,\n});\nexport default connect(mapStatetoProps, {\n  actionLogin,\n})(Login);\n","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Project\\Project.js",["112","113","114","115","116","117","118"],"/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable camelcase */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\n/* eslint-disable react/destructuring-assignment */\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  Button, Col, Container, Row, Table, InputGroup, FormControl, Modal, Form,\n} from 'react-bootstrap';\n\nimport ProTypes, { object } from 'prop-types';\nimport './index.css';\nimport { connect } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport Select from 'react-select';\nimport {\n  getProject, addProject, deleteProject, updateProject,\n} from '../../store/project/Action';\nimport { actionLogOut } from '../../store/login/Actions';\nimport testAPI from '../../untils/api';\n\nconst Project = (propProject) => {\n  const [projectState, setProjectState] = useState([]);\n  const history = useHistory();\n  const [loginData, setLoginData] = useState({});\n  const [modalCreate, setModalCreate] = useState(false);\n  const [employeeUpdate, setEmployeeUpdate] = useState([]);\n  const [employeeInProject, setEmployeeInProject] = useState([]);\n  const [modalDelete, setModalDelete] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [titleModal, setTitleModal] = useState({ title: '', button: '' });\n  const [selectedUser, setSelectedUser] = useState([]);\n  const format = (str) => {\n    const s2 = str.split('-');\n    return `${s2[2]}-${s2[1]}-${s2[0]}`;\n  };\n  const checkStaetPj = (str) => {\n    if (str === 'Đang làm') {\n      return 'danglam';\n    }\n    return 'xong';\n  };\n  const xoa_dau = (str) => {\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, 'a');\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, 'e');\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, 'i');\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, 'o');\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, 'u');\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, 'y');\n    str = str.replace(/đ/g, 'd');\n    str = str.replace(/À|Á|Ạ|Ả|Ã|Â|Ầ|Ấ|Ậ|Ẩ|Ẫ|Ă|Ằ|Ắ|Ặ|Ẳ|Ẵ/g, 'A');\n    str = str.replace(/È|É|Ẹ|Ẻ|Ẽ|Ê|Ề|Ế|Ệ|Ể|Ễ/g, 'E');\n    str = str.replace(/Ì|Í|Ị|Ỉ|Ĩ/g, 'I');\n    str = str.replace(/Ò|Ó|Ọ|Ỏ|Õ|Ô|Ồ|Ố|Ộ|Ổ|Ỗ|Ơ|Ờ|Ớ|Ợ|Ở|Ỡ/g, 'O');\n    str = str.replace(/Ù|Ú|Ụ|Ủ|Ũ|Ư|Ừ|Ứ|Ự|Ử|Ữ/g, 'U');\n    str = str.replace(/Ỳ|Ý|Ỵ|Ỷ|Ỹ/g, 'Y');\n    str = str.replace(/Đ/g, 'D');\n    return str;\n  };\n\n  useEffect(() => {\n    setLoginData(propProject.userlogin);\n    if (Object.keys(propProject.userlogin).length === 0) {\n      history.push('/');\n    }\n  }, [propProject.userlogin]);\n  useEffect(() => {\n    const result = [];\n    // eslint-disable-next-line no-restricted-syntax\n    for (const i of propProject.employees) {\n      result.push({ value: i.id, label: i.name });\n    }\n    setEmployeeInProject(result);\n  }, [propProject.employees]);\n  const handleChangeSearch = (event) => {\n    setSearchTerm(event.target.value);\n  };\n  useEffect(() => {\n    setProjectState(propProject.projectReducer.projects);\n  }, [propProject.projectReducer.projects]);\n  useEffect(() => {\n    const results = propProject.projectReducer.projects.filter((user) => xoa_dau(user.name)\n      .toLowerCase()\n      .includes(xoa_dau(searchTerm).toLowerCase()));\n    setProjectState(results);\n  }, [searchTerm]);\n  // Set employees in redux\n  // Thêm nhân sự vào dự án\n  return (\n    <Formik\n      initialValues={{\n        _id: '',\n        name: '',\n        batdau: '',\n        ketthuc: '',\n        trangthai: '',\n        members: [],\n      }}\n      validate={(values) => {\n        const errors = {};\n        if (!values.name) {\n          errors.name = 'Nhập tên dự án.';\n        }\n        if (!values.batdau) {\n          errors.batdau = 'Required';\n        }\n        if (!values.ketthuc) {\n          errors.ketthuc = 'Required';\n        }\n        if (new Date(values.batdau) > new Date(values.ketthuc)) {\n          errors.batdau = 'Thời gian bắt đầu phải trước thời gian kết thúc.';\n          errors.ketthuc = 'Thời gian kết thúc  phải muộn hơn thời gian bắt đầu.';\n        }\n        return errors;\n      }}\n    >\n      {(prop) => {\n        const {\n          values,\n          touched,\n          errors,\n          // isSubmitting,\n          handleChange,\n          handleBlur,\n          // handleSubmit,\n        } = prop;\n        function resetValues() {\n          values._id = '';\n          values.name = '';\n          values.batdau = '';\n          values.ketthuc = '';\n          values.trangthai = '';\n          values.members = [];\n        }\n        const onClickSend = () => {\n          for (const i of employeeUpdate) {\n            values.members.push(`${i.value}`);\n          }\n          if (Object.keys(errors).length === 0) {\n            if (titleModal.title === 'Thêm dự án') {\n              testAPI.post('/projects/create', values).then((data) => {\n                resetValues();\n                propProject.addProject(data.data.data[0]);\n                console.log('data', data);\n                setModalCreate(false);\n              }).catch((err) => {\n                console.log('err', err);\n              });\n            } else {\n              testAPI.post(`/projects/update/${values._id}`, values).then((data) => {\n                resetValues();\n                propProject.updateProject(data.data.data);\n                console.log('data', data);\n                setModalCreate(false);\n              }).catch((err) => {\n                console.log('err', err);\n              });\n            }\n          }\n        };\n        const confirmDelete = () => {\n          testAPI.post(`projects/delete/${values._id}`).then((data) => {\n            propProject.deleteProject(values._id);\n            setModalDelete(false);\n            resetValues();\n          }).catch((err) => {\n            console.log('err', err);\n          });\n        };\n        return (\n          <>\n            <div className=\"projectPage\">\n              <div className=\"topProject\">\n                <div className=\"dashBoardTitle\">\n                  <h1 className=\"hiSoftText\">Hisoft EMS</h1>\n                  <Button\n                    onClick={() => {\n                      localStorage.clear();\n                      propProject.actionLogOut();\n                    }}\n                    className=\"_logOut\"\n                  >\n                    Log Out\n                  </Button>\n                </div>\n              </div>\n              <div className=\"bodyDashboard\">\n                <Container fluid>\n                  <Row>\n                    <Col xs={2} className=\"FirstColumnInProject\">\n                      <ul className=\"test\">\n                        <li>\n                          <Link to=\"/dashboard\" className=\"link-dashboard\">\n                            Dashboard\n                          </Link>\n                        </li>\n                        {loginData.role === 'AD' ? (\n                          <li>\n                            <Link to=\"/employee\">Nhân sự</Link>\n                          </li>\n                        ) : (\n                          <p />\n                        )}\n                        <li>\n                          <Link to=\"/project\" className=\"clickProject\">\n                            Dự án\n                          </Link>\n                        </li>\n                        <li>\n                          <Link to=\"/report\">Báo cáo</Link>\n                        </li>\n                      </ul>\n                    </Col>\n                    <Col xs={10} className=\"maintainEmployee\">\n                      <div className=\"main-header\">\n                        <h2>Danh sách dự án</h2>\n                        <Row>\n                          {loginData.role === 'AD' ? (\n                            <Col md={6}>\n                              <Button\n                                className=\"buttonDashBoard\"\n                                onClick={() => {\n                                  setTitleModal({ title: 'Thêm dự án', button: 'Thêm' });\n                                  setModalCreate(true);\n                                }}\n                              >\n                                Thêm mới\n                              </Button>\n                            </Col>\n                          ) : (\n                            <p />\n                          )}\n                          <Col md={{ span: 6, offset: 6 }} className=\" m-auto d-flex justify-content-lg-end col-md-6 offset-md-6\">\n                            <InputGroup className=\"mb-3 search-header\">\n                              <FormControl\n                                placeholder=\"Tìm kiếm\"\n                                aria-label=\"Recipient's username\"\n                                aria-describedby=\"basic-addon2\"\n                                className=\"input-search flex-grow-9 \"\n                                onChange={handleChangeSearch}\n                                value={searchTerm}\n                              />\n                              <Button className=\"button-search\">\n                                <i className=\"fas fa-search\" />\n                              </Button>\n                            </InputGroup>\n                          </Col>\n                        </Row>\n                      </div>\n                      <Table>\n                        <thead className=\"thead-project row-header\">\n                          <tr>\n                            <th colSpan=\"2\">Tên</th>\n                            <th colSpan=\"2\">Ngày bắt đầu</th>\n                            <th colSpan=\"2\">Ngày hoàn thành</th>\n                            <th colSpan=\"2\" className=\"text-center\">Trạng thái</th>\n                            <th colSpan=\"2\" className=\"text-center\">Hành động</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {projectState.length > 0 ? (\n                            projectState.map((project) => (\n                              <tr id={project.id} className=\"_pj-row\">\n                                <td className=\"tbody-name md-col-2\" colSpan=\"2\">\n                                  {project.name}\n                                </td>\n                                <td className=\"tbody-start md-col-2\" colSpan=\"2\">\n                                  {format(project.batdau)}\n                                </td>\n                                <td className=\"tbody-finishDate md-col-2\" colSpan=\"2\">\n                                  {format(project.ketthuc)}\n                                </td>\n                                <td className=\"tbody-state  text-center md-col-2\" colSpan=\"2\">\n                                  <div\n                                    className={`${checkStaetPj(\n                                      project.trangthai,\n                                    )}`}\n                                  >\n                                    <div>\n                                      <p>{project.trangthai}</p>\n                                    </div>\n                                  </div>\n                                </td>\n                                <td className=\"tbody-hanhDong md-col-2 text-center\" colSpan=\"2\">\n                                  <Button\n                                    className=\"_button-edit btn btn-primary\"\n                                    onClick={() => {\n                                      setTitleModal({ title: 'Sửa', button: 'Sửa' });\n                                      setModalCreate(true);\n                                      console.log('project', project);\n                                      const result = [];\n                                      // eslint-disable-next-line no-restricted-syntax\n                                      for (const i of project.memberInProject) {\n                                        result.push({ value: i._id, label: i.name });\n                                      }\n                                      Object.assign(values, project);\n                                      setSelectedUser(result);\n                                    }}\n                                  >\n                                    Sửa\n                                  </Button>\n                                  <Button\n                                    className=\"_button-delete btn-danger\"\n                                    onClick={() => {\n                                      Object.assign(values, project);\n                                      // console.log('values', values);\n                                      setModalDelete(true);\n                                      console.log('errors', errors);\n                                    }}\n                                  >\n                                    Xóa\n                                  </Button>\n                                </td>\n                              </tr>\n                            ))\n                          ) : (\n                            <tr>\n                              <th>End</th>\n                            </tr>\n                          )}\n                        </tbody>\n                      </Table>\n                    </Col>\n                  </Row>\n                </Container>\n              </div>\n            </div>\n            {/* Modal create project */}\n            <Modal\n              show={modalCreate}\n              onHide={() => {\n                resetValues();\n                setModalCreate(false);\n              }}\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>{titleModal.title}</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <Form noValidate>\n                  {/* Name of project */}\n                  <Form.Group>\n                    <Form.Label htmlFor=\"name\">Tên dự án</Form.Label>\n                    <Form.Control\n                      id=\"name\"\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Nhập tên\"\n                      value={values.name}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={errors.name && touched.name && 'error'}\n                    />\n                    {errors.name && touched.name && (\n                    <div className=\"input-feedback\">{errors.name}</div>\n                    )}\n                  </Form.Group>\n                  {/* Batdau */}\n                  <Form.Group>\n                    <Form.Label htmlFor=\"batdau\">Bắt đầu</Form.Label>\n                    <Form.Control\n                      id=\"batdau\"\n                      name=\"batdau\"\n                      type=\"date\"\n                      value={values.batdau}\n                      onChange={prop.handleChange}\n                      onBlur={handleBlur}\n                      className={errors.batdau && touched.batdau && 'error'}\n                    />\n                    {errors.batdau && touched.batdau && (\n                    <div className=\"input-feedback\">{errors.batdau}</div>\n                    )}\n                  </Form.Group>\n                  {/* Ket thuc */}\n                  <Form.Group>\n                    <Form.Label htmlFor=\"ketthuc\">Kết thúc</Form.Label>\n                    <Form.Control\n                      id=\"ketthuc\"\n                      name=\"ketthuc\"\n                      type=\"date\"\n                      value={values.ketthuc}\n                      onChange={prop.handleChange}\n                      onBlur={handleBlur}\n                      className={errors.ketthuc && touched.ketthuc && 'error'}\n                    />\n                    {errors.ketthuc && touched.ketthuc && (\n                    <div className=\"input-feedback\">{errors.ketthuc}</div>\n                    )}\n                  </Form.Group>\n                  {/* Trang thai */}\n                  <Form.Label htmlFor=\"trangthai\">Trạng thái</Form.Label>\n                  <Form.Control\n                    as=\"select\"\n                    name=\"trangthai\"\n                    className=\"mr-sm-2\"\n                    id=\"inlineFormCustomSelect\"\n                    custom\n                    onChange={handleChange}\n                    value={values.trangthai}\n                    defaultValue=\"Chọn trạng thái.\"\n                  >\n                    <option value=\"...\">...</option>\n                    <option value=\"Đang làm\">Đang làm</option>\n                    <option value=\"Hoàn thành\">Hoàn thành</option>\n                  </Form.Control>\n                  {/* Nhân sự */}\n                  <Form.Label htmlFor=\"Thành viên\">Thành viên</Form.Label>\n                  <Select\n                    isMulti\n                    name=\"colors\"\n                    options={employeeInProject}\n                    defaultValue={[...selectedUser]}\n                    className=\"basic-multi-select\"\n                    classNamePrefix=\"select\"\n                    onChange={(data) => { setEmployeeUpdate(data); }}\n                  />\n                </Form>\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"primary\"\n                  onClick={onClickSend}\n                >\n                  {titleModal.button}\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => {\n                    resetValues();\n                    setModalCreate(false);\n                  }}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            {/* Modal delete */}\n            <Modal\n              show={modalDelete}\n              onHide={() => {\n                setModalDelete(false);\n              }}\n              size=\"sm\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Thông báo từ Admin</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>Chắc chắn muốn xóa.</Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={confirmDelete}\n                  className=\"btn-danger btn\"\n                >\n                  Xóa\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => {\n                    setModalDelete(false);\n                  }}\n                >\n                  Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </>\n        );\n      }}\n    </Formik>\n  );\n};\n\nProject.ProTypes = {\n  projectReducer: ProTypes.array.isRequired,\n  loginReducer: ProTypes.objectOf(ProTypes.object).isRequired,\n  actionLogOut: ProTypes.func.isRequired,\n  getProject: ProTypes.func.isRequired,\n  addProject: ProTypes.func.isRequired,\n  deleteProject: ProTypes.func.isRequired,\n  userlogin: ProTypes.objectOf(ProTypes.object).isRequired,\n  employees: ProTypes.objectOf(ProTypes.object).isRequired,\n  updateProject: ProTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  projectReducer: state.projectReducer,\n  userlogin: state.loginReducer.userInfo,\n  employees: state.employees.employees,\n});\nexport default connect(mapStateToProps, {\n  getProject,\n  actionLogOut,\n  addProject,\n  deleteProject,\n  updateProject,\n})(Project);\n","C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Emloyee\\Employee.js",["119"],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\reducer.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\project\\Reducer.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\employees\\Reducer.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\employees\\Action.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\actions.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\project\\Action.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\project\\Types.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\types.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\employees\\Types.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\untils\\api.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\DashBoard\\Dashboard.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\Actions.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\Types.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\login\\Reducer.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\components\\Report\\Report.js",["120","121","122"],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\ots\\Reducer.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\ots\\Types.js",[],"C:\\Users\\11\\Desktop\\linhtinh\\test\\webnoibo-front\\src\\store\\ots\\Action.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":40,"column":7,"nodeType":"137","messageId":"138","endLine":40,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":147,"column":17,"nodeType":"137","messageId":"138","endLine":147,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":150,"column":17,"nodeType":"137","messageId":"138","endLine":150,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":156,"column":17,"nodeType":"137","messageId":"138","endLine":156,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":159,"column":17,"nodeType":"137","messageId":"138","endLine":159,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":170,"column":13,"nodeType":"137","messageId":"138","endLine":170,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":293,"column":39,"nodeType":"137","messageId":"138","endLine":293,"endColumn":50},{"ruleId":"135","severity":1,"message":"136","line":311,"column":39,"nodeType":"137","messageId":"138","endLine":311,"endColumn":50},{"ruleId":"135","severity":1,"message":"136","line":160,"column":13,"nodeType":"137","messageId":"138","endLine":160,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":53,"column":5,"nodeType":"137","messageId":"138","endLine":53,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":72,"column":11,"nodeType":"137","messageId":"138","endLine":72,"endColumn":22},{"ruleId":"135","severity":1,"message":"136","line":78,"column":9,"nodeType":"137","messageId":"138","endLine":78,"endColumn":20},"lines-around-directive",["139"],"no-spaced-func",["140"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]